 # include <stdio.h>

char encryption_rotation(char [], int);

char decryption_rotation(char [],int);

void upper_string(char []);

int main() 
{
        int i;
    
    char cipher, subst, string[] = "Abcdef";
    
    char sub[] = "QWERTY";
    
    upper_string(string);
    
    //char sub[] = "QWERTYUIOPASDFGHJKLZXCVBNM";
    
    for(i = 0; string[i] != '\0'; ++i)
    {
        
        
        for(i = 0; sub[i] != '\0'; ++i)
        {
            cipher = string[i];
            subst = sub[i];
            
        switch(cipher)
        {
            case 'A':
                cipher = subst;
            break;
            case 'B':
                cipher = subst;
            break;
            case 'C':
                 cipher = subst;
                 break;
            case 'D':
                 cipher = subst;
                 break;
            case 'F':
                     cipher = subst;
                     break;
            default:
                cipher = cipher;
        }
        
    int key =  3;
    
            char string[] = "KHOOR ULFKDUG";
          
          upper_string(string);
          
          //encryption_rotation(string, key);
          
          decryption_rotation(string, key);
                        
                    
                    printf("%s\n", string);
                    
        return 0;
        
}

char encryption_rotation(char s[], int a)
{
        char cipher;
         int i;
      
    
    for(i = 0; s[i] != '\0'; ++i)
    {
            cipher = s[i];
            
        if(cipher >= 'A' && cipher <= 'Z')
             {
                 cipher = cipher + a;
             }                  

         else if(cipher > 'Z')
            {
                cipher = cipher - 'Z' + 'A' - 1;
            }
            else
            {
                cipher = cipher + 0;
            }
            
            s[i] = cipher;
            
}        
            
        return s[i];

}

char decryption_rotation(char s[],int a)
{
          char cipher;
         int i;
      
      
    
    for(i = 0; s[i] != '\0'; ++i)
    {
            cipher = s[i];
            
      switch(cipher)
      {
        
        case ':':
                s[i] = cipher;
        
        case ' ':
                s[i] = cipher;
               
        case '.':
                s[i] = cipher;
               
        case '?':
                s[i] = cipher;
               
        case ',':
                s[i] = cipher;
              
        default:
                cipher = cipher;
        }    

        if(cipher >= 'A' && cipher <= 'Z')
             {
                 cipher = cipher - a;                  

           if(cipher < 'A')
            {
                cipher = cipher + 'Z' - 'A' + 1;
            }

            else
            {
                s[i] = cipher;
            }
       } 
            else 
            {
                s[i] = cipher;
            }
            
            s[i] = cipher;       

}        
            
        return s[i];
}

void upper_string(char s[]) {
   int n = 0;
   
   while (s[n] != '\0') {
      if (s[n] >= 'a' && s[n] <= 'z') {
         s[n] = s[n] - 32;
      }
      n++;
   }
}
